mat1[] = 0
return(mat1)
}
)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
return(mat1)
}
)
mat1
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
}
)
mat1
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
data_zip$dose.response.mats[[index]]
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
return(mat1)
}
)
mat1
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_zip'))
mat2
smoothing(mat1, 1)
res_zip = list()
for(i in 1:length(unique(data$block_id))){
index = which(data_zip$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_zip'))
mat2$block_id = data_zip$drug.pairs$blockIDs[i]
res_zip[[i]] = mat2
}
res_table_zip = do.call(rbind, res_zip)
res_response = list()
for(i in 1:length(unique(data$block_id))){
index = which(data_response$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_response$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_response$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'response'))
mat2$block_id = data_response$drug.pairs$blockIDs[i]
mat2$drug_row = data_response$drug.pairs$drug.row[i]
mat2$drug_col = data_response$drug.pairs$drug.col[i]
mat2$conc_r_unit = data_response$drug.pairs$concRUnit[i]
mat2$conc_c_unit = data_response$drug.pairs$concCUnit[i]
res_response[[i]] = mat2
}
res_table_response = do.call(rbind, res_response)
res_zip = list()
for(i in 1:length(unique(data$block_id))){
index = which(data_zip$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_zip'))
mat2$block_id = data_zip$drug.pairs$blockIDs[i]
res_zip[[i]] = mat2
}
res_table_zip = do.call(rbind, res_zip)
res_bliss = list()
for(i in 1:length(unique(data$block_id))){
index = which(data_bliss$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_bliss$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_bliss$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_bliss'))
res_bliss[[i]] = mat2
}
res_table_bliss = do.call(rbind, res_bliss)
res_hsa = list()
for(i in 1:length(unique(data$block_id))){
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
res_hsa[[i]] = mat2
}
res_table_hsa = do.call(rbind, res_hsa)
res_hsa = list()
for(i in 1:length(unique(data$block_id))){
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
res_hsa[[i]] = mat2
}
res_table_hsa = do.call(rbind, res_hsa)
table2 = table(res_table_hsa$block_id)
table1 = table(res_table_response$block_id)
which(table1-table2!=0)
i=8582
index = which(data_hsa$drug.pairs$blockIDs == i)
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
smoothing(data_response$dose.response.mats[[index]], 1)
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
dim(mat1)
data_hsa$dose.response.mats[[index]]
data_response$dose.response.mats[[index]]
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
dim(mat1)
smoothing(mat1, 1)
mat1 = smoothing(mat1, 1)
data_response$dose.response.mats[[index]]
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
dim(mat1)
i
res_hsa[[i]]
res_response[[i]]
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
dim(mat1)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
dim(mat2)
res_hsa[[i]]
dim(res_hsa[[i]])
i
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
dim(mat2)
res_hsa = list()
for(i in 1:length(unique(data$block_id))){
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
res_hsa[[i]] = mat2
}
res_table_hsa = do.call(rbind, res_hsa)
dim(res_hsa[[8582]])
i=8582
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
dim(setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa')))
dim(data_hsa$dose.response.mats[[index]])
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
dim(mat2)
res_hsa[[i]]
res_hsa = list()
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
res_hsa[[i]] = mat2
res_hsa[[i]]
res_hsa = list()
for(i in unique(data$block_id)){
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
res_hsa[[i]] = mat2
}
res_table_hsa = do.call(rbind, res_hsa)
res_hsa[8582]
i=8582
index = which(data_hsa$drug.pairs$blockIDs == i)
tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
res_hsa[[i]] = mat2
res_hsa[[i]]
dim(mat2)
dim(mat1)
smoothing(data_hsa$dose.response.mats[[index]], 1)
data_hsa$dose.response.mats[[index]]
tmp=data_hsa$dose.response.mats[[index]]
tmp[]=0
smoothing(tmp,1)
tmp2=smoothing(tmp,1)
dim(tmp2)
res_hsa = list()
for(i in unique(data$block_id)){
index = which(data_hsa$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
res_hsa[[i]] = mat2
}
res_table_hsa = do.call(rbind, res_hsa)
res_response = list()
for(i in unique(data$block_id)){
index = which(data_response$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_response$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_response$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'response'))
mat2$block_id = data_response$drug.pairs$blockIDs[i]
mat2$drug_row = data_response$drug.pairs$drug.row[i]
mat2$drug_col = data_response$drug.pairs$drug.col[i]
mat2$conc_r_unit = data_response$drug.pairs$concRUnit[i]
mat2$conc_c_unit = data_response$drug.pairs$concCUnit[i]
res_response[[i]] = mat2
}
res_table_response = do.call(rbind, res_response)
res_zip = list()
for(i in unique(data$block_id)){
index = which(data_zip$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_zip$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_zip$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_zip'))
mat2$block_id = data_zip$drug.pairs$blockIDs[i]
res_zip[[i]] = mat2
}
res_table_zip = do.call(rbind, res_zip)
res_bliss = list()
for(i in unique(data$block_id)){
index = which(data_bliss$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_bliss$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_bliss$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_bliss'))
mat2$block_id = data_bliss$drug.pairs$blockIDs[i]
res_bliss[[i]] = mat2
}
res_table_bliss = do.call(rbind, res_bliss)
res_hsa = list()
for(i in unique(data$block_id)){
index = which(data_hsa$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_hsa$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_hsa$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_hsa'))
mat2$block_id = data_hsa$drug.pairs$blockIDs[i]
res_hsa[[i]] = mat2
}
res_table_hsa = do.call(rbind, res_hsa)
res_loewe = list()
for(i in unique(data$block_id)){
index = which(data_loewe$drug.pairs$blockIDs == i)
mat1 = tryCatch (
{ # in case error happens, return the score of NA
mat1 = smoothing(data_loewe$dose.response.mats[[index]], 1)
},
error = function(cond){
print(i);
mat1 = data_loewe$dose.response.mats[[index]]
mat1[] = 0
mat1 = smoothing(mat1, 1)
return(mat1)
}
)
mat2 = setNames(melt(mat1), c('conc_r', 'conc_c', 'synergy_loewe'))
res_loewe[[i]] = mat2
}
res_table_loewe = do.call(rbind, res_loewe)
surface = cbind(res_table_response, res_table_zip, res_table_bliss, res_table_hsa, res_table_loewe)
head(surface)
save.image("C:/Users/Localadmin_jtang/Dropbox/drugcomb/code/data_process.RData")
write.xlsx(surface[,c(1:8,11,15,19,23)],"surface.xlsx")
getwd()
write.csv(surface[,c(1:8,11,15,19,23)],"surface.csv")
